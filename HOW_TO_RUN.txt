═══════════════════════════════════════════════════════════════
               HOW TO RUN - Debian Package Generator
═══════════════════════════════════════════════════════════════

This project is structured as a Python package.

METHOD 1: Run from the command line
───────────────────────────────────────────────────────────────
Step 1: Install the package
This will install all dependencies and the `debpkg-build` command.
$ pip3 install -e ./debpkg

Step 2: Run the package builder
$ debpkg-build -c debpkg/config/package.yaml -t debpkg/templates

Output: sample-config-pkg_1.0.0_all.deb


VERIFY THE PACKAGE (macOS)
───────────────────────────────────────────────────────────────
$ ar -x sample-config-pkg_1.0.0_all.deb
$ tar -tzf data.tar.gz


INSTALL ON UBUNTU
───────────────────────────────────────────────────────────────
$ sudo apt install ./sample-config-pkg_1.0.0_all.deb


WHAT'S INSTALLED?
───────────────────────────────────────────────────────────────
Location: /opt/config/

Certificates:
  • /opt/config/certs/ca.crt       (CA certificate)
  • /opt/config/certs/ca.key       (CA private key)
  • /opt/config/certs/server.crt   (Server certificate)
  • /opt/config/certs/server.key   (Server private key)
  • /opt/config/certs/client.crt   (Client certificate)
  • /opt/config/certs/client.key   (Client private key)

Configuration:
  • /opt/config/test.conf          (Application config)


PACKAGE CONTENTS
───────────────────────────────────────────────────────────────
✓ Triggers file (monitors /opt/config/)
✓ Pre-install script (backup & directory creation)
✓ Post-install script (sets permissions)
✓ CA, Server, and Client certificates (CA-signed)
✓ Configuration file


NOTES
───────────────────────────────────────────────────────────────
✓ 100% Pure Python source code
✓ Cross-platform compatible
✓ Certificates signed by CA
✓ CA valid for 10 years, certs valid for 1 year
✓ Triggers included

═══════════════════════════════════════════════════════════════